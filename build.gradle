plugins {
    id 'java'
}

group = 'br.com.gokan'
version = '0.1'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly fileTree(dir: "C:/Users/pedro/Desktop/Meus projeto/projetos-repository/mGiveReward/libs", include: '*.jar')
    compileOnly fileTree(dir: "libs", include: '*.jar')
    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
}

def namePlugin = 'mRankup'
def lowerCaseNamePlugin = namePlugin.toLowerCase()
def packet = "${group}.${lowerCaseNamePlugin}.Main"
def targetJavaVersion = 8


jar {
//    archiveFileName.set("C:/Users/Pedro/Desktop/Projeto_Plugins_Vender/Servidor_Teste/plugins/${namePlugin}.jar")
    archiveFileName.set("C:/Users/pedro/Desktop/Meus projeto/Servidores/1.7.10/plugins/${namePlugin}.jar")
}


java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version, namePlugin: namePlugin, packet: packet]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }

}